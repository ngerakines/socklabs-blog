#!/usr/bin/perl

use strict;
use warnings;

use POSIX qw( strftime );
use English;
use Mail::Box::Manager;
use Readonly;
use XML::Atom::Entry;
use XML::Atom::Feed;
use XML::Atom::Person;

my ($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) = localtime(time);

# Change the values here

## Note: Output file
Readonly my $OUTFILE => "$ENV{'HOME'}/mail_summary.xml";
## Note: Mailroot that houses all of the maildir subdirectories
Readonly my $MAILROOT => $ENV{'HOME'}.'/Mail/';
## Note: The max num. of messages to count as new
Readonly my $MAXMSGS => 200;
# Note: The based atom id tag
Readonly my $TAGBASE => 'tag:ron.localhost,2006:';
# Note: The atom author name to display
Readonly my $AUTHORNAME => 'Nick Gerakines';

## Note: This one is special because I have some sub folders based on the
##       current year/month. See the 'lists' maildirs config for an example.
Readonly my $MONTH => (sprintf "%04d",($year + 1900)).'/'.(sprintf "%02d",($mon + 1));

## Note: These are the different 'groups' that I have setup. 
my %maildirs = (
	'main' => {
		'prefix' => '',
		'mailboxes' => [qw/afam family misc personal sixapart accounts cpan ebay inbox ookles website/],
	},
	'sixapart' => {
		'prefix' => 'sixapart/',
		'mailboxes' => [qw/2006 atom-dev fogbugz inbox pronet sent/],
	},
	'lists' => {
		'prefix' => $MONTH.'/',
		'mailboxes' => [qw/atom-list danga-list freemason-list plog-list rss-list security-list xmlrpc-list xsl-list yws-flickr-list/],
	},
);

# Don't edit past here

my $mgr = Mail::Box::Manager->new;

my $feed = XML::Atom::Feed->new;
$feed->title('Mailbox Summary Feed');
$feed->id( $TAGBASE . 'mailboxsummary');
$feed->generator('mailbox.pl', { 'uri' => 'http://blog.socklabs.com/mailbox.pl.txt' } );

my $author = XML::Atom::Person->new;
$author->name( $AUTHORNAME );

my %mailstats;

foreach my $item (keys %maildirs) {
	my $prefix = $maildirs{$item}{'prefix'};
	map { setstats($_) } map {$prefix.$_ } @{ $maildirs{$item}{'mailboxes'} };
}

$feed->add_entry(summaryitem());

open DAT,"> $OUTFILE";
print DAT $feed->as_xml;
close DAT;

sub setstats {
	my ($mailbox) = @_;
	my $folder = $mgr->open(folder => $MAILROOT.$mailbox);
	if (! $folder) { return; }
	my $msgcount = $folder->nrMessages;
	$mailstats{$mailbox}{'total'} = $msgcount;
	my @curmessages = $folder->messages($msgcount - $MAXMSGS, $msgcount);
	@curmessages = grep {not $_->label('seen') } @curmessages;
	$mailstats{$mailbox}{'unread'} = scalar @curmessages;
}

sub summaryitem {
	my $feedentry = XML::Atom::Entry->new;
	$feedentry->title('Message Summary');
	$feedentry->id('tag:ron.localhost,2006:messagesummary-' . time);
	$feedentry->published(strftime '%Y-%m-%dT%H:%M:%SZ', gmtime);
	$feedentry->updated(strftime '%Y-%m-%dT%H:%M:%SZ', gmtime);
	$feedentry->author($author);
	my ($msgcount, $desc) = (0, '');
	foreach my $item (keys %maildirs) {
		if (! $maildirs{$item}) { next; }
		my $prefix = $maildirs{$item}{'prefix'};
		$desc .= "<p>$item:</p>";
		$desc .= '<ul>';
		$desc .= join q{}, map { lilist($prefix.$_) } @{ $maildirs{$item}{'mailboxes'} };
		$desc .= '</ul>';
	}
	$desc .= "<p>$msgcount unread messages</p>";
	$feedentry->content( $desc );
	return $feedentry;
}

sub lilist {
	my ($mailbox) = @_;
	if (! $mailstats{$mailbox}) { return; }
	return join q{}, '<li>', $mailbox, ' - ', ($mailstats{$mailbox}{'unread'} == $MAXMSGS  ? '<em>'.$mailstats{$mailbox}{'unread'}.'</em>' : $mailstats{$mailbox}{'unread'}), ' / ', $mailstats{$mailbox}{'total'}, '</li>';
}
